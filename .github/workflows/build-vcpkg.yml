name: Build using vcpkg

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-20.04, windows-2022]
        triplet-all: ["x64-linux", "x64-windows"]
        triplet: ["x64-linux-release-only", "x64-windows-release-only"]

    runs-on: ${{ matrix.os }}
    name: ${{ matrix.os }}-${{ github.workflow }}

    env:
      VCPKG_ROOT: ${{ github.workspace }}/vcpkg
      VCPKG_DEFAULT_BINARY_CACHE: ${{ github.workspace }}/vcpkg/bincache
      VCPKG_DEFAULT_TRIPLET: ${{ matrix.triplet }}

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true

    - uses: lukka/get-cmake@latest

    - name: Setup vcpkg
      uses: lukka/run-vcpkg@v10
      with:
        vcpkgGitCommitId: 'b03d383e49c1288be78886a2406c6f01a7afc446'

    - name: Create custom vcpkg triplet
      run: |
        cp "$VCPKG_ROOT/triplets/${{matrix.triplet-all}}.cmake" "$VCPKG_ROOT/triplets/community/${{matrix.triplet}}.cmake"
        echo "set(VCPKG_BUILD_TYPE release)" >> "$VCPKG_ROOT/triplets/community/${{matrix.triplet}}.cmake"

    - name: Configure CMake
      shell: bash
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: |
        cmake -B "${{github.workspace}}/build" -DCMAKE_TOOLCHAIN_FILE="$VCPKG_ROOT/scripts/buildsystems/vcpkg.cmake" -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      run: cmake --build "${{github.workspace}}/build" --config ${{env.BUILD_TYPE}}
